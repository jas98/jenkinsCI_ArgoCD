
trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8be9b2fa-171b-4b41-8c7f-7906c6254eea'
  imageRepository: 'cicd'
  containerRegistry: 'azcicd.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'azurecd/'
        Contents: '*.yaml'
        TargetFolder: '$(Pipeline.Workspace)/azurecd'
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/s/azurecd'
        ArtifactName: 'azurecd'
        publishLocation: 'pipeline'

- stage: Deploy 
  dependsOn: Build
  displayName: Deploy on kubernetes
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'azurecd'
        targetPath: '$(Pipeline.Workspace)/azurecd'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'kubernetes-cluster'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: 'azregisterysecret'
        dockerRegistryEndpoint: 'azcicd'
    
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'kubernetes-cluster'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/azurecd/deployment.yaml
          $(Pipeline.Workspace)/azurecd/service.yaml